{"version":3,"sources":["Components/Tariff.js","App.js","serviceWorker.js","index.js"],"names":["Tariff","props","title","priceText","price","currency","usageLimit","hit","internet","internetUnit","internetText","logos","roaming","minutes","minutesUnit","minutesText","messages","messagesText","className","map","i","src","alt","logo","App","tariff","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.477fae18.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Tariff(props) {\n    const {title, priceText, price, currency, usageLimit, hit, internet, internetUnit, internetText, logos, roaming, minutes, minutesUnit, minutesText, messages, messagesText} = props;\n    return (\n        <div className=\"lists\">\n                <div className=\"list\">\n                    <span className=\"list-span title\">{title}</span>\n                    <span className=\"price-text\">{priceText}</span>\n                    <div className=\"list-price\">\n                        <span className=\"list-span price\">{price}</span>\n                        <div className=\"per-currency\">\n                            <span className=\"currency\">{currency}</span> <span className=\"usage-limit\">{usageLimit}</span>\n                        </div>\n                        <span>{hit.map(i => <img className=\"hit\" src={i} alt=\"\" />)}</span>\n                    </div>\n                </div>\n                <div className=\"list\">\n                    <span className=\"list-span internet\">{internet} <span className=\"internet-unit\">{internetUnit}</span></span>\n                    <span className=\"list-span internet-text\">{internetText}</span>\n                    <span className=\"list-span logos\">{logos.map(logo => <img className=\"logo\" src={logo} alt=\"social\" />)}</span>\n                    <span className=\"list-span roaming\">{roaming}</span>\n                </div>\n                <div className=\"list\">\n                    <span className=\"list-span minutes\">{minutes} <span className=\"minutes-unit\">{minutesUnit}</span></span>\n                    <span className=\"list-span minutes-text\">{minutesText}</span>\n                </div>\n                <div className=\"list\">\n                    <span className=\"list-span messages\">{messages} <span className=\"messages-text\">{messagesText}</span></span>\n                </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport Tariff from './Components/Tariff';\nimport './App.css';\n\nfunction App() {\n  const tariffs = [\n    {\n      title: 'Везде онлайн',\n      priceText: '',\n      price: 500,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: ['https://msk.tele2.ru/api/media/asset?mediaId=m1310027'],\n      internet: 40,\n      internetUnit: 'ГБ',\n      internetText: '+безлимитные',\n      logos: ['https://msk.tele2.ru/api/media/asset?mediaId=m220005', 'https://msk.tele2.ru/api/media/asset?mediaId=m220001', 'https://msk.tele2.ru/api/media/asset?mediaId=m220003', 'https://msk.tele2.ru/api/media/asset?mediaId=m220006', 'https://msk.tele2.ru/api/media/asset?mediaId=m220004', 'https://msk.tele2.ru/api/media/asset?mediaId=m1990041', 'https://msk.tele2.ru/api/media/asset?mediaId=m1680033'],\n      roaming: '',\n      minutes: 500,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: 50,\n      messagesText: 'SMS'\n    },\n    {\n      title: 'Мой онлайн',\n      priceText: '',\n      price: 400,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: 15,\n      internetUnit: 'ГБ',\n      internetText: '+безлимитные',\n      logos: ['https://msk.tele2.ru/api/media/asset?mediaId=m220005', 'https://msk.tele2.ru/api/media/asset?mediaId=m220001', 'https://msk.tele2.ru/api/media/asset?mediaId=m220003', 'https://msk.tele2.ru/api/media/asset?mediaId=m220006', 'https://msk.tele2.ru/api/media/asset?mediaId=m220004', 'https://msk.tele2.ru/api/media/asset?mediaId=m1990041', 'https://msk.tele2.ru/api/media/asset?mediaId=m1680033'],\n      roaming: '',\n      minutes: 500,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: null,\n      messagesText: ''\n    },\n    {\n      title: 'Мой онлайн+',\n      priceText: '',\n      price: 700,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: 30,\n      internetUnit: 'ГБ',\n      internetText: '+безлимитные',\n      logos: ['https://msk.tele2.ru/api/media/asset?mediaId=m220005', 'https://msk.tele2.ru/api/media/asset?mediaId=m220001', 'https://msk.tele2.ru/api/media/asset?mediaId=m220003', 'https://msk.tele2.ru/api/media/asset?mediaId=m220006', 'https://msk.tele2.ru/api/media/asset?mediaId=m220004', 'https://msk.tele2.ru/api/media/asset?mediaId=m1990041', 'https://msk.tele2.ru/api/media/asset?mediaId=m1680033'],\n      roaming: 'ИНТЕРНЕТ ЗА ГРАНИЦЕЙ',\n      minutes: 800,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: null,\n      messagesText: ''\n    },\n    {\n      title: 'Мой разговор',\n      priceText: '',\n      price: 200,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: 2,\n      internetUnit: 'ГБ',\n      internetText: '',\n      logos: [],\n      roaming: '',\n      minutes: 200,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: null,\n      messagesText: ''\n    },\n    {\n      title: 'Мой Tele2',\n      priceText: '',\n      price: 7,\n      currency: '₽',\n      usageLimit: '/день',\n      hit: [],\n      internet: 5,\n      internetUnit: 'ГБ',\n      internetText: '',\n      logos: [],\n      roaming: '',\n      minutes: null,\n      minutesUnit: '',\n      minutesText: '+ безлимит на Tele2',\n      messages: null,\n      messagesText: ''\n    },\n    {\n      title: 'Безлимит',\n      priceText: '',\n      price: 650,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: null,\n      internetUnit: '',\n      internetText: 'БЕЗЛИМИТНЫЙ ИНТЕРНЕТ',\n      logos: [],\n      roaming: '',\n      minutes: 500,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: 50,\n      messagesText: 'SMS'\n    },\n    {\n      title: 'Премиум',\n      priceText: '',\n      price: 1500,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: 50,\n      internetUnit: 'ГБ',\n      internetText: 'БЕЗЛИМИТНЫЙ ИНТЕРНЕТ',\n      logos: [],\n      roaming: '',\n      minutes: 2000,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: 500,\n      messagesText: 'SMS'\n    },\n    {\n      title: 'Классический',\n      priceText: 'Без абонентской платы',\n      price: '',\n      currency: '',\n      usageLimit: '',\n      hit: [],\n      internet: null,\n      internetUnit: '',\n      internetText: '',\n      logos: [],\n      roaming: '',\n      minutes: null,\n      minutesUnit: '',\n      minutesText: '',\n      messages: null,\n      messagesText: ''\n    },\n    { \n      title: 'Интернет для устройств',\n      priceText: 'Без абонентской платы',\n      price: '',\n      currency: '',\n      usageLimit: '',\n      hit: [],\n      internet: null,\n      internetUnit: '',\n      internetText: '',\n      logos: [],\n      roaming: '',\n      minutes: null,\n      minutesUnit: '',\n      minutesText: '',\n      messages: null,\n      messagesText: ''\n    },\n    {\n      title: 'Интернет для вещей',\n      priceText: '',\n      price: 100,\n      currency: '₽',\n      usageLimit: '/месяц',\n      hit: [],\n      internet: 300,\n      internetUnit: 'МБ',\n      internetText: '',\n      logos: [],\n      roaming: '',\n      minutes: 30,\n      minutesUnit: 'мин.',\n      minutesText: '+ безлимит на Tele2',\n      messages: 100,\n      messagesText: 'SMS'\n    }\n  ];\n  return (\n    <div className=\"App\">\n      <h1>Тарифы</h1>\n      {tariffs.map(tariff => <Tariff title={tariff.title} priceText={tariff.priceText} price={tariff.price} currency={tariff.currency} usageLimit={tariff.usageLimit} hit={tariff.hit} internet={tariff.internet} internetUnit={tariff.internetUnit} internetText={tariff.internetText} logos={tariff.logos} roaming={tariff.roaming} minutes={tariff.minutes} minutesUnit={tariff.minutesUnit} minutesText={tariff.minutesText} messages={tariff.messages} messagesText={tariff.messagesText} />)}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}